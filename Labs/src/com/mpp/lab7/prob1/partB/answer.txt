 Explain, in each case, what is  wrong with the solution. 
 Place each of your answers in a text file in the relevant package.
 
The problem with this solution is that class Employee has an overloading method 'equals()'.
But it should be overriding java.lang.Object 'equals()' method. 
And we should also override hashCode() method since equal objects has equal hashCode.

//	public boolean equals(Employee e) {
//		return e.name.equals(name) && e.salary == salary;
//	}

Add the below code to Employee.java
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + salary;
		return result;
	}
	
	/**
	 * An Employee instance is considered to be a duplicate of another Employee
	 * instance if the two instances have the same name and salary.
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Employee))
			return false;
		Employee other = (Employee) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (salary != other.salary)
			return false;
		return true;
	}